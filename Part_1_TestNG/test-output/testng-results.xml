<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-08-28T00:38:26 EEST" name="Loan Department" finished-at="2019-08-28T00:38:26 EEST" duration-ms="122">
    <groups>
      <group name="Smoke">
        <method signature="TestBase.ploan()[pri:0, instance:test.TestBase@3ecd23d9]" name="ploan" class="test.TestBase"/>
        <method signature="day4.MobileLoginHomeLoan()[pri:0, instance:test.day4@33723e30]" name="MobileLoginHomeLoan" class="test.day4"/>
        <method signature="day3.MobileLogincarLoan()[pri:0, instance:test.day3@2641e737]" name="MobileLogincarLoan" class="test.day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2019-08-28T00:38:26 EEST" name="Car Loan" finished-at="2019-08-28T00:38:26 EEST" duration-ms="122">
      <class name="test.day3">
        <test-method is-config="true" signature="Bfsuite()[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="Bfsuite" finished-at="2019-08-28T00:38:26 EEST" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bfsuite -->
        <test-method is-config="true" signature="befoclas()[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="befoclas" finished-at="2019-08-28T00:38:26 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befoclas -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="beforeevery" finished-at="2019-08-28T00:38:26 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileLogincarLoan()[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="MobileLogincarLoan" finished-at="2019-08-28T00:38:26 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogincarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="afterevery" finished-at="2019-08-28T00:38:26 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="beforeevery" finished-at="2019-08-28T00:38:26 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobilesignoutcarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="MobilesignoutcarLoan" data-provider="getData" finished-at="2019-08-28T00:38:26 EEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="afterevery" finished-at="2019-08-28T00:38:26 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="beforeevery" finished-at="2019-08-28T00:38:26 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobilesignoutcarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="MobilesignoutcarLoan" data-provider="getData" finished-at="2019-08-28T00:38:26 EEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="afterevery" finished-at="2019-08-28T00:38:26 EEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="beforeevery" finished-at="2019-08-28T00:38:26 EEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobilesignoutcarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="MobilesignoutcarLoan" data-provider="getData" finished-at="2019-08-28T00:38:26 EEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="afterevery" finished-at="2019-08-28T00:38:26 EEST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="beforeevery" finished-at="2019-08-28T00:38:26 EEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="WebloginCarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="WebloginCarLoan" finished-at="2019-08-28T00:38:26 EEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginCarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="afterevery" finished-at="2019-08-28T00:38:26 EEST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="afteclas()[pri:0, instance:test.day3@2641e737]" started-at="2019-08-28T00:38:26 EEST" name="afteclas" finished-at="2019-08-28T00:38:26 EEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afteclas -->
      </class> <!-- test.day3 -->
      <class name="test.day1">
        <test-method is-config="true" signature="afSyite()[pri:0, instance:test.day1@43bd930a]" started-at="2019-08-28T00:38:27 EEST" name="afSyite" finished-at="2019-08-28T00:38:27 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afSyite -->
      </class> <!-- test.day1 -->
    </test> <!-- Car Loan -->
    <test started-at="2019-08-28T00:38:26 EEST" name="Personal loan" finished-at="2019-08-28T00:38:26 EEST" duration-ms="115">
      <class name="test.day4">
        <test-method signature="LoginAPIHomeLoan()[pri:0, instance:test.day4@33723e30]" started-at="2019-08-28T00:38:26 EEST" name="LoginAPIHomeLoan" finished-at="2019-08-28T00:38:26 EEST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHomeLoan -->
        <test-method signature="MobileLoginHomeLoan()[pri:0, instance:test.day4@33723e30]" started-at="2019-08-28T00:38:26 EEST" name="MobileLoginHomeLoan" finished-at="2019-08-28T00:38:26 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHomeLoan -->
        <test-method signature="WebloginHomeLoan(java.lang.String)[pri:0, instance:test.day4@33723e30]" started-at="2019-08-28T00:38:26 EEST" name="WebloginHomeLoan" finished-at="2019-08-28T00:38:26 EEST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginHomeLoan -->
      </class> <!-- test.day4 -->
      <class name="test.TestBase">
        <test-method is-config="true" signature="prerequiste()[pri:0, instance:test.TestBase@3ecd23d9]" started-at="2019-08-28T00:38:26 EEST" name="prerequiste" finished-at="2019-08-28T00:38:26 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequiste -->
        <test-method signature="ploan()[pri:0, instance:test.TestBase@3ecd23d9]" started-at="2019-08-28T00:38:26 EEST" name="ploan" finished-at="2019-08-28T00:38:26 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- test.TestBase -->
      <class name="test.day1">
        <test-method signature="Demo()[pri:0, instance:test.day1@43bd930a]" started-at="2019-08-28T00:38:26 EEST" name="Demo" finished-at="2019-08-28T00:38:26 EEST" duration-ms="5" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at test.day1.Demo(day1.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:41)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:443)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:67)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:835)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="lastexecution()[pri:0, instance:test.day1@43bd930a]" started-at="2019-08-28T00:38:26 EEST" name="lastexecution" finished-at="2019-08-28T00:38:26 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
      </class> <!-- test.day1 -->
    </test> <!-- Personal loan -->
  </suite> <!-- Loan Department -->
</testng-results>
